{"ast":null,"code":"export default {\n  name: \"dataAnalyse\",\n  data() {\n    return {\n      options: [{\n        value: '选项1',\n        label: '摄像头一'\n      }, {\n        value: '选项2',\n        label: '摄像头二'\n      }, {\n        value: '选项3',\n        label: '摄像头三'\n      }, {\n        value: '选项4',\n        label: '摄像头四'\n      }, {\n        value: '选项5',\n        label: '摄像头五'\n      }],\n      typeOptions: [{\n        value: 'bar'\n      }, {\n        value: 'line'\n      }, {\n        value: 'pine'\n      }],\n      value: '',\n      xValue: [\"抽烟\", \"玩手机\", \"明火\"],\n      yValue: [5, 20, 36],\n      dialogTableVisible: false,\n      dialogFormVisible: false,\n      form: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      formLabelWidth: '120px',\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n      value2: '',\n      pictureType: 'bar'\n    };\n  },\n  mounted() {\n    this.drawLine(\"myChart\", this.pictureType);\n    this.drawLine(\"myChart2\", this.pictureType);\n    this.drawLine(\"myChart3\", this.pictureType);\n  },\n  methods: {\n    drawLine(chartID, type) {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$echarts.init(document.getElementById(chartID));\n      myChart.setOption({\n        title: {\n          text: '在Vue中使用echarts'\n        },\n        tooltip: {},\n        xAxis: {\n          data: this.xValue,\n          axisLabel: {\n            interval: 0 // 设置横坐标显示的间隔，这里设置为2表示每隔两个数据显示一个\n          }\n        },\n\n        yAxis: {},\n        series: [{\n          name: '销量',\n          type: type,\n          data: this.yValue,\n          itemStyle: {\n            color: '#81bcd9' // 每个柱子的颜色分别为红、绿、蓝、黄、紫\n          }\n        }]\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","options","value","label","typeOptions","xValue","yValue","dialogTableVisible","dialogFormVisible","form","region","date1","date2","delivery","type","resource","desc","formLabelWidth","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","value1","value2","pictureType","mounted","drawLine","methods","chartID","myChart","$echarts","init","document","getElementById","setOption","title","tooltip","xAxis","axisLabel","interval","yAxis","series","itemStyle","color"],"sources":["src/components/dataAnalyse.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card>\r\n      <div class=\"block\">\r\n        <span class=\"demonstration\"></span>\r\n        <el-date-picker\r\n            v-model=\"value2\"\r\n            type=\"datetimerange\"\r\n            :picker-options=\"pickerOptions\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            align=\"right\"\r\n            :style=\"{ marginRight: '150px' }\">\r\n        </el-date-picker>\r\n\r\n\r\n\r\n        <el-select v-model=\"value\" filterable placeholder=\"请选择摄像头\" :style=\"{ marginRight: '150px' }\">\r\n          <el-option\r\n              v-for=\"item in options\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n\r\n\r\n        <el-select v-model=\"pictureType\" filterable placeholder=\"图表类型\" :style=\"{ marginRight: '150px' }\">\r\n          <el-option\r\n              v-for=\"item in typeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.value\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" circle></el-button>\r\n\r\n      </div>\r\n    </el-card>\r\n    <el-card>\r\n      <el-row>\r\n\r\n        <el-col :span=\"12\">\r\n          <div class=\"grid-content bg-purple\"><div id=\"myChart\" :style=\"{width: '600px', height: '500px'}\"></div></div></el-col>\r\n\r\n\r\n        <el-col :span=\"12\"><div class=\"grid-content bg-purple-light\"> <div id=\"myChart2\" :style=\"{width: '600px', height: '500px'}\"></div></div></el-col>\r\n\r\n      </el-row>\r\n\r\n\r\n      <div id=\"myChart3\" :style=\"{width: '300px', height: '300px'}\"></div>\r\n      <div id=\"myChart4\" :style=\"{width: '300px', height: '300px'}\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"dataAnalyse\",\r\n  data() {\r\n    return {\r\n      options: [{\r\n        value: '选项1',\r\n        label: '摄像头一'\r\n      }, {\r\n        value: '选项2',\r\n        label: '摄像头二'\r\n      }, {\r\n        value: '选项3',\r\n        label: '摄像头三'\r\n      }, {\r\n        value: '选项4',\r\n        label: '摄像头四'\r\n      }, {\r\n        value: '选项5',\r\n        label: '摄像头五'\r\n      }],\r\n      typeOptions: [{\r\n        value: 'bar',\r\n      }, {\r\n        value: 'line',\r\n      }, {\r\n        value: 'pine',\r\n      }],\r\n      value: '',\r\n      xValue:[\"抽烟\",\"玩手机\",\"明火\"],\r\n      yValue:[5, 20, 36],\r\n\r\n      dialogTableVisible: false,\r\n      dialogFormVisible: false,\r\n      form: {\r\n        name: '',\r\n        region: '',\r\n        date1: '',\r\n        date2: '',\r\n        delivery: false,\r\n        type: [],\r\n        resource: '',\r\n        desc: ''\r\n      },\r\n      formLabelWidth: '120px',\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近三个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n      value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\r\n      value2: '',\r\n      pictureType:'bar',\r\n    };\r\n  },\r\n  mounted(){\r\n    this.drawLine(\"myChart\",this.pictureType);\r\n    this.drawLine(\"myChart2\",this.pictureType);\r\n    this.drawLine(\"myChart3\",this.pictureType);\r\n  },\r\n  methods:{\r\n    drawLine(chartID,type){\r\n      // 基于准备好的dom，初始化echarts实例\r\n      let myChart = this.$echarts.init(document.getElementById(chartID));\r\n\r\n      myChart.setOption({\r\n        title: { text: '在Vue中使用echarts' },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.xValue,\r\n          axisLabel: {\r\n            interval: 0 // 设置横坐标显示的间隔，这里设置为2表示每隔两个数据显示一个\r\n          }\r\n        },\r\n        yAxis: {},\r\n        series: [{\r\n          name: '销量',\r\n          type: type,\r\n          data: this.yValue,\r\n          itemStyle: {\r\n            color: '#81bcd9'// 每个柱子的颜色分别为红、绿、蓝、黄、紫\r\n          }\r\n        }]\r\n      });\r\n\r\n\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AA2DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAC,WAAA;QACAF,KAAA;MACA;QACAA,KAAA;MACA;QACAA,KAAA;MACA;MACAA,KAAA;MACAG,MAAA;MACAC,MAAA;MAEAC,kBAAA;MACAC,iBAAA;MACAC,IAAA;QACAV,IAAA;QACAW,MAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;QACAC,IAAA;QACAC,QAAA;QACAC,IAAA;MACA;MACAC,cAAA;MACAC,aAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;MACA;MACAM,MAAA,OAAAL,IAAA,4BAAAA,IAAA;MACAM,MAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA,iBAAAF,WAAA;IACA,KAAAE,QAAA,kBAAAF,WAAA;IACA,KAAAE,QAAA,kBAAAF,WAAA;EACA;EACAG,OAAA;IACAD,SAAAE,OAAA,EAAArB,IAAA;MACA;MACA,IAAAsB,OAAA,QAAAC,QAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,cAAA,CAAAL,OAAA;MAEAC,OAAA,CAAAK,SAAA;QACAC,KAAA;UAAAtB,IAAA;QAAA;QACAuB,OAAA;QACAC,KAAA;UACA5C,IAAA,OAAAK,MAAA;UACAwC,SAAA;YACAC,QAAA;UACA;QACA;;QACAC,KAAA;QACAC,MAAA;UACAjD,IAAA;UACAe,IAAA,EAAAA,IAAA;UACAd,IAAA,OAAAM,MAAA;UACA2C,SAAA;YACAC,KAAA;UACA;QACA;MACA;IAGA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}