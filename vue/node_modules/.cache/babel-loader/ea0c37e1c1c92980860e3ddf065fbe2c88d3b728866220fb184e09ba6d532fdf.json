{"ast":null,"code":"\n// var player = document.getElementById('video');\n// if (flvjs.isSupported()) {\n//     var flvPlayer = flvjs.createPlayer({\n//         type: 'flv',\n//         \"isLive\": true,\n//         hasAudio:false,\n//         enableWorker:true,\n//         enableStashBuffer:false,\n//         seekType:'range',\n//         stashInitialTime:128,\n//         url: `http://116.204.11.171:7001/${this.$route.params.cID}/test.flv`,//拉流url\n//     });\n//     flvPlayer.attachMediaElement(video);\n//     flvPlayer.load(); //加载\n//     flv_start();\n// }\n// function flv_start() {\n//         player.play();\n//     }\n//     function flv_pause() {\n//         player.pause();\n//     }\n//     function flv_destroy() {\n//         player.pause();\n//         player.unload();\n//         player.detachMediaElement();\n//         player.destroy();\n//         player = null;\n//     }\n//     player.addEventListener(\"progress\", () => {\n// let end = player.buffered.end(0); //获取当前buffered值(缓冲区末尾)\n// let delta = end - player.currentTime; //获取buffered与当前播放位置的差值\n\n//  // 延迟过大，通过跳帧的方式更新视频\n// if (delta > 10 || delta < 0) {\n// \t\tthis.player.currentTime = this.player.buffered.end(0) - 1;\n// \t\treturn;\n// }\n\n// // 追帧\n// if (delta > 1) {\n// \t\tplayer.playbackRate = 1.1;\n// } else {\n// \t\tplayer.playbackRate = 1;\n// }\n// });","map":{"version":3,"names":[],"sources":["src/components/htmlFlv.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <header>\r\n        </header>\r\n        <div class=\"play-video wrapper clearfix\" style=\"width: 1215px;margin: 0 auto;\">\r\n            <div class=\"play-left\" style=\"float: left;width: 644px;\">\r\n                <div class=\"bigvideo\" style=\"position: relative;width: 1144px;box-shadow: 0 0 3px 3px #ccc;\">\r\n                    <video id=\"video\" controls autoplay width=\"1144\" height=\"644\"></video>\r\n                    <div class=\"info\">\r\n                        <p>直播测试</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script src=\"js/flv.min.js\"></script>\r\n<script src=\"flv.min.js\"></script>\r\n<script>\r\n    // var player = document.getElementById('video');\r\n    // if (flvjs.isSupported()) {\r\n    //     var flvPlayer = flvjs.createPlayer({\r\n    //         type: 'flv',\r\n    //         \"isLive\": true,\r\n\t//         hasAudio:false,\r\n\t//         enableWorker:true,\r\n\t//         enableStashBuffer:false,\r\n\t//         seekType:'range',\r\n\t//         stashInitialTime:128,\r\n    //         url: `http://116.204.11.171:7001/${this.$route.params.cID}/test.flv`,//拉流url\r\n    //     });\r\n    //     flvPlayer.attachMediaElement(video);\r\n    //     flvPlayer.load(); //加载\r\n    //     flv_start();\r\n    // }\r\n    // function flv_start() {\r\n    //         player.play();\r\n    //     }\r\n    //     function flv_pause() {\r\n    //         player.pause();\r\n    //     }\r\n    //     function flv_destroy() {\r\n    //         player.pause();\r\n    //         player.unload();\r\n    //         player.detachMediaElement();\r\n    //         player.destroy();\r\n    //         player = null;\r\n    //     }\r\n    //     player.addEventListener(\"progress\", () => {\r\n  \t// let end = player.buffered.end(0); //获取当前buffered值(缓冲区末尾)\r\n  \t// let delta = end - player.currentTime; //获取buffered与当前播放位置的差值\r\n\r\n \t//  // 延迟过大，通过跳帧的方式更新视频\r\n  \t// if (delta > 10 || delta < 0) {\r\n    // \t\tthis.player.currentTime = this.player.buffered.end(0) - 1;\r\n    // \t\treturn;\r\n  \t// }\r\n\r\n  \t// // 追帧\r\n  \t// if (delta > 1) {\r\n    // \t\tplayer.playbackRate = 1.1;\r\n  \t// } else {\r\n    // \t\tplayer.playbackRate = 1;\r\n  \t// }\r\n\t// });\r\n</script>"],"mappings":";AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}