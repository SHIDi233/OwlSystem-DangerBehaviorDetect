{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport global from \"./GlobalPage.vue\";\nconst restweburl = global.ip;\nexport default {\n  name: \"regionDivision\",\n  data() {\n    return {\n      isStyleChanged: false,\n      options: [],\n      value: \"\",\n      image: \"\",\n      // image: \"http://116.204.11.171:8080/images/1.png\", // 图片的URL\n      //image: require(\"http://116.204.11.171:8080/images/1.png\"),\n      canvas: null,\n      ctx: null,\n      points: [],\n      dragging: false,\n      imageLoaded: false,\n      // 新增的属性\n\n      imageWidth: '',\n      imageHeight: ''\n    };\n  },\n  mounted() {\n    this.canvas = this.$refs.canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = this.image;\n    this.canvas.width = image.width;\n    this.canvas.height = image.height;\n    const imageRect = this.$refs.image.getBoundingClientRect();\n    this.canvas.style.top = imageRect.top + \"px\";\n    this.canvas.style.left = imageRect.left + \"px\";\n    const imageWidth = imageRect.width;\n    const imageHeight = imageRect.height;\n    this.canvas.width = imageWidth;\n    this.canvas.height = imageHeight;\n    this.imageHeight = imageHeight;\n    this.imageWidth = imageWidth;\n    console.log(imageRect.width);\n    console.log(imageRect.height);\n    // this.imageLoaded = true; // 设置图像已加载完成\n  },\n\n  methods: {\n    handleCameraChange() {\n      // 向后端发送请求并包含选择的摄像头值\n      axios.get(restweburl + \"getImg\", {\n        params: {\n          cID: this.value\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        const imageUrl = \"http://\" + res.data.data; // 获取返回的图片 URL\n        // this.image = \"http://116.204.11.171:8080/images/1.png\"; // 更新图片 URL\n        this.image = imageUrl;\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      //\n      // this.canvas = this.$refs.canvas;\n      // this.ctx = this.canvas.getContext(\"2d\");\n      // const image = new Image();\n      // image.src = this.image;\n      // this.canvas.width = image.width;\n      // this.canvas.height = image.height;\n      // const imageRect = this.$refs.image.getBoundingClientRect();\n      // this.canvas.style.top = imageRect.top + \"px\";\n      // this.canvas.style.left = imageRect.left + \"px\";\n      //\n      // const imageWidth = imageRect.width;\n      // const imageHeight = imageRect.height;\n      // this.canvas.width = imageWidth;\n      // this.canvas.height = imageHeight;\n      // console.log(\"imageRect\");\n      // console.log(imageRect.width);\n      // console.log(imageRect.height);\n      // this.imageLoaded = true; // 设置图像已加载完成\n    },\n\n    startDrawing() {\n      this.isStyleChanged = true;\n      this.canvas = this.$refs.canvas;\n      this.ctx = this.canvas.getContext(\"2d\");\n      const image = new Image();\n      image.src = this.image;\n      this.canvas.width = image.width;\n      this.canvas.height = image.height;\n      const imageRect = this.$refs.image.getBoundingClientRect();\n      this.canvas.style.top = imageRect.top + \"px\";\n      this.canvas.style.left = imageRect.left + \"px\";\n      const imageWidth = imageRect.width;\n      const imageHeight = imageRect.height;\n      this.canvas.width = imageWidth;\n      this.canvas.height = imageHeight;\n      this.imageHeight = imageHeight;\n      this.imageWidth = imageWidth;\n      console.log(\"imageRect\");\n      console.log(imageRect.width);\n      console.log(imageRect.height);\n      this.imageLoaded = true; // 设置图像已加载完成\n\n      this.$message({\n        message: '请开始绘制！可点击图片任意四个点绘制四边形！',\n        type: 'success'\n      });\n    },\n    submitPoints() {\n      console.log(this.points);\n      console.log('x0:', this.points[0].x);\n      console.log('y0:', this.points[0].y);\n      console.log('x1:', this.points[1].x);\n      console.log('y1:', this.points[1].y);\n      console.log('x2:', this.points[2].x);\n      console.log('y2:', this.points[2].y);\n      console.log('x3:', this.points[3].x);\n      console.log('y3:', this.points[3].y);\n      var x0 = (parseFloat(this.points[0].x) / this.imageWidth).toFixed(3);\n      var y0 = (parseFloat(this.points[0].y) / this.imageHeight).toFixed(3);\n      var x1 = (parseFloat(this.points[1].x) / this.imageWidth).toFixed(3);\n      var y1 = (parseFloat(this.points[1].y) / this.imageHeight).toFixed(3);\n      var x2 = (parseFloat(this.points[2].x) / this.imageWidth).toFixed(3);\n      var y2 = (parseFloat(this.points[2].y) / this.imageHeight).toFixed(3);\n      var x3 = (parseFloat(this.points[3].x) / this.imageWidth).toFixed(3);\n      var y3 = (parseFloat(this.points[3].y) / this.imageHeight).toFixed(3);\n      console.log(x0);\n      const string = x0 + ',' + y0 + ',' + x1 + ',' + y1 + ',' + x2 + ',' + y2 + ',' + x3 + ',' + y3;\n      console.log(string);\n      // 发送添加摄像头的请求\n      var params = new URLSearchParams();\n      params.append(\"cID\", this.value);\n      params.append(\"zone\", string);\n      axios.post('http://116.204.11.171:8080/addZone', params).then(response => {\n        if (response.data.code === 1) {\n          console.log(\"成功\");\n          this.$message({\n            message: '提交成功！',\n            type: 'success'\n          });\n        } else {\n          // 添加失败的处理\n          alert(response.data.msg);\n        }\n      }).catch(error => {\n        console.error(error);\n        // 错误的处理\n      });\n    },\n\n    handleMouseDown(event) {\n      const rect = this.canvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const point = {\n        x,\n        y\n      };\n      console.log('Point:', point); // 打印坐标\n      this.points.push(point);\n      console.log(this.points);\n      this.drawPoints();\n      this.dragging = true;\n    },\n    handleMouseMove(event) {\n      if (this.dragging) {\n        const rect = this.canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const point = {\n          x,\n          y\n        };\n        this.points[this.points.length - 1] = point;\n        this.drawPoints();\n      }\n    },\n    handleMouseUp() {\n      this.dragging = false;\n    },\n    drawPoints() {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.strokeStyle = \"blue\";\n      this.ctx.lineWidth = 2;\n      this.ctx.beginPath();\n      for (let i = 0; i < this.points.length; i++) {\n        const point = this.points[i];\n        if (i === 0) {\n          this.ctx.moveTo(point.x, point.y);\n        } else {\n          this.ctx.lineTo(point.x, point.y);\n        }\n      }\n      if (this.points.length >= 3) {\n        this.ctx.closePath();\n        this.ctx.fillStyle = \"rgba(0, 0, 255, 0.5)\";\n        this.ctx.fill();\n      }\n      this.ctx.stroke();\n    },\n    clearDrawing() {\n      this.points = [];\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  },\n  created() {\n    axios.get(restweburl + \"cameras\").then(res => {\n      this.options = res.data.data;\n      this.loading = false;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n};","map":{"version":3,"names":["axios","global","restweburl","ip","name","data","isStyleChanged","options","value","image","canvas","ctx","points","dragging","imageLoaded","imageWidth","imageHeight","mounted","$refs","getContext","Image","src","width","height","imageRect","getBoundingClientRect","style","top","left","console","log","methods","handleCameraChange","get","params","cID","then","res","imageUrl","catch","error","startDrawing","$message","message","type","submitPoints","x","y","x0","parseFloat","toFixed","y0","x1","y1","x2","y2","x3","y3","string","URLSearchParams","append","post","response","code","alert","msg","handleMouseDown","event","rect","clientX","clientY","point","push","drawPoints","handleMouseMove","length","handleMouseUp","clearRect","strokeStyle","lineWidth","beginPath","i","moveTo","lineTo","closePath","fillStyle","fill","stroke","clearDrawing","created","loading"],"sources":["src/components/regionDivision.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"margin-bottom: 40px;\">\r\n      划分区域\r\n      <span :style=\"{ marginRight: '10px' }\">摄像头：</span>\r\n      <el-select v-model=\"value\" filterable placeholder=\"请选择摄像头\" :style=\"{ marginRight: '20px' }\" @change=\"handleCameraChange\">\r\n        <el-option\r\n            v-for=\"item in options\"\r\n            :key=\"item.cid\"\r\n            :label=\"item.cid\"\r\n            :value=\"item.cid\"\r\n        ></el-option>\r\n      </el-select>\r\n      <el-button type=\"primary\" :plain=\"true\" @click=\"startDrawing\">开始绘制</el-button>\r\n      <el-button type=\"primary\" @click=\"clearDrawing\">清空绘制</el-button>\r\n\r\n      <el-button type=\"primary\" @click=\"submitPoints\">确认绘制</el-button>\r\n\r\n    </el-card>\r\n\r\n    <el-card>\r\n      <div class=\"card-container\">\r\n        <el-card class=\"card\">\r\n          <div class=\"card-content\">\r\n            <!--            <img ref=\"image\" :src=\"'http://116.204.11.171:8080/images/1.png'\" class=\"card-image\">-->\r\n            <img ref=\"image\" :src=\"image\" class=\"card-image\">\r\n\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </el-card>\r\n    <canvas ref=\"canvas\"\r\n            :style=\"{ position: imageLoaded ? 'absolute' : 'initial' }\"\r\n            @mousedown=\"handleMouseDown\"\r\n            @mousemove=\"handleMouseMove\"\r\n            @mouseup=\"handleMouseUp\">\r\n    </canvas>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport global from \"./GlobalPage.vue\";\r\nconst restweburl = global.ip;\r\n\r\nexport default {\r\n  name: \"regionDivision\",\r\n  data() {\r\n    return {\r\n      isStyleChanged: false,\r\n      options: [],\r\n      value: \"\",\r\n      image:\"\",\r\n    // image: \"http://116.204.11.171:8080/images/1.png\", // 图片的URL\r\n      //image: require(\"http://116.204.11.171:8080/images/1.png\"),\r\n      canvas: null,\r\n      ctx: null,\r\n      points: [],\r\n      dragging: false,\r\n      imageLoaded: false, // 新增的属性\r\n\r\n      imageWidth:'',\r\n      imageHeight:'',\r\n\r\n    };\r\n  },\r\n  mounted() {\r\n    this.canvas = this.$refs.canvas;\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    const image = new Image();\r\n    image.src = this.image;\r\n\r\n      this.canvas.width = image.width;\r\n      this.canvas.height = image.height;\r\n      const imageRect = this.$refs.image.getBoundingClientRect();\r\n      this.canvas.style.top = imageRect.top + \"px\";\r\n      this.canvas.style.left = imageRect.left + \"px\";\r\n\r\n      const imageWidth = imageRect.width;\r\n      const imageHeight = imageRect.height;\r\n      this.canvas.width = imageWidth;\r\n      this.canvas.height = imageHeight;\r\n      this.imageHeight=imageHeight;\r\n      this.imageWidth=imageWidth;\r\n      console.log(imageRect.width);\r\n      console.log(imageRect.height);\r\n     // this.imageLoaded = true; // 设置图像已加载完成\r\n\r\n  },\r\n  methods:{\r\n    handleCameraChange() {\r\n      // 向后端发送请求并包含选择的摄像头值\r\n      axios.get(restweburl + \"getImg\", {\r\n        params: {\r\n          cID: this.value,\r\n        }\r\n      })\r\n          .then((res) => {\r\n\r\n            console.log(res.data.data);\r\n           const imageUrl = \"http://\"+res.data.data; // 获取返回的图片 URL\r\n          // this.image = \"http://116.204.11.171:8080/images/1.png\"; // 更新图片 URL\r\n            this.image =imageUrl;\r\n\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n\r\n      //\r\n      // this.canvas = this.$refs.canvas;\r\n      // this.ctx = this.canvas.getContext(\"2d\");\r\n      // const image = new Image();\r\n      // image.src = this.image;\r\n      // this.canvas.width = image.width;\r\n      // this.canvas.height = image.height;\r\n      // const imageRect = this.$refs.image.getBoundingClientRect();\r\n      // this.canvas.style.top = imageRect.top + \"px\";\r\n      // this.canvas.style.left = imageRect.left + \"px\";\r\n      //\r\n      // const imageWidth = imageRect.width;\r\n      // const imageHeight = imageRect.height;\r\n      // this.canvas.width = imageWidth;\r\n      // this.canvas.height = imageHeight;\r\n      // console.log(\"imageRect\");\r\n      // console.log(imageRect.width);\r\n      // console.log(imageRect.height);\r\n      // this.imageLoaded = true; // 设置图像已加载完成\r\n\r\n\r\n\r\n\r\n    },\r\n    startDrawing(){\r\n\r\n      this.isStyleChanged = true;\r\n      this.canvas = this.$refs.canvas;\r\n      this.ctx = this.canvas.getContext(\"2d\");\r\n      const image = new Image();\r\n      image.src = this.image;\r\n      this.canvas.width = image.width;\r\n      this.canvas.height = image.height;\r\n      const imageRect = this.$refs.image.getBoundingClientRect();\r\n      this.canvas.style.top = imageRect.top + \"px\";\r\n      this.canvas.style.left = imageRect.left + \"px\";\r\n\r\n      const imageWidth = imageRect.width;\r\n      const imageHeight = imageRect.height;\r\n      this.canvas.width = imageWidth;\r\n      this.canvas.height = imageHeight;\r\n\r\n      this.imageHeight=imageHeight;\r\n      this.imageWidth=imageWidth;\r\n      console.log(\"imageRect\");\r\n      console.log(imageRect.width);\r\n      console.log(imageRect.height);\r\n      this.imageLoaded = true; // 设置图像已加载完成\r\n\r\n      this.$message({\r\n        message: '请开始绘制！可点击图片任意四个点绘制四边形！',\r\n        type: 'success'\r\n      });\r\n    },\r\n    submitPoints(){\r\n\r\n      console.log(this.points);\r\n      console.log('x0:', this.points[0].x);\r\n      console.log('y0:', this.points[0].y);\r\n      console.log('x1:', this.points[1].x);\r\n      console.log('y1:', this.points[1].y);\r\n      console.log('x2:', this.points[2].x);\r\n      console.log('y2:', this.points[2].y);\r\n      console.log('x3:', this.points[3].x);\r\n      console.log('y3:', this.points[3].y);\r\n\r\n\r\n      var x0 = (parseFloat(this.points[0].x) / this.imageWidth).toFixed(3);\r\n      var y0 = (parseFloat(this.points[0].y) / this.imageHeight).toFixed(3);\r\n      var x1 = (parseFloat(this.points[1].x) / this.imageWidth).toFixed(3);\r\n      var y1 = (parseFloat(this.points[1].y) / this.imageHeight).toFixed(3);\r\n      var x2 = (parseFloat(this.points[2].x )/ this.imageWidth).toFixed(3);\r\n      var y2 = (parseFloat(this.points[2].y) / this.imageHeight).toFixed(3);\r\n      var x3 = (parseFloat(this.points[3].x )/ this.imageWidth).toFixed(3);\r\n      var y3 = (parseFloat(this.points[3].y) / this.imageHeight).toFixed(3);\r\n\r\n      console.log(x0);\r\n      const string=x0+','+y0+','+x1+','+y1+','+x2+','+y2+','+x3+','+y3;\r\n      console.log(string);\r\n      // 发送添加摄像头的请求\r\n      var params = new URLSearchParams();\r\n      params.append(\"cID\",this.value);\r\n      params.append(\"zone\",string);\r\n      axios.post('http://116.204.11.171:8080/addZone', params)\r\n          .then((response) => {\r\n            if (response.data.code === 1) {\r\n              console.log(\"成功\");\r\n              this.$message({\r\n                message: '提交成功！',\r\n                type: 'success'\r\n              });\r\n            } else {\r\n              // 添加失败的处理\r\n              alert( response.data.msg);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            // 错误的处理\r\n          });\r\n    },\r\n    handleMouseDown(event) {\r\n      const rect = this.canvas.getBoundingClientRect();\r\n      const x = event.clientX - rect.left;\r\n      const y = event.clientY - rect.top;\r\n      const point = { x, y };\r\n\r\n      console.log('Point:', point); // 打印坐标\r\n      this.points.push(point);\r\n      console.log(this.points);\r\n      this.drawPoints();\r\n      this.dragging = true;\r\n    },\r\n    handleMouseMove(event) {\r\n      if (this.dragging) {\r\n        const rect = this.canvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        const point = { x, y };\r\n        this.points[this.points.length - 1] = point;\r\n        this.drawPoints();\r\n      }\r\n    },\r\n    handleMouseUp() {\r\n      this.dragging = false;\r\n    },\r\n    drawPoints() {\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n      this.ctx.strokeStyle = \"blue\";\r\n      this.ctx.lineWidth = 2;\r\n      this.ctx.beginPath();\r\n      for (let i = 0; i < this.points.length; i++) {\r\n        const point = this.points[i];\r\n        if (i === 0) {\r\n          this.ctx.moveTo(point.x, point.y);\r\n        } else {\r\n          this.ctx.lineTo(point.x, point.y);\r\n        }\r\n      }\r\n      if (this.points.length >= 3) {\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = \"rgba(0, 0, 255, 0.5)\";\r\n        this.ctx.fill();\r\n      }\r\n      this.ctx.stroke();\r\n    },\r\n\r\n    clearDrawing() {\r\n      this.points = [];\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n  },\r\n  created() {\r\n    axios\r\n        .get(restweburl + \"cameras\")\r\n        .then((res) => {\r\n          this.options = res.data.data;\r\n          this.loading = false;\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card-container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.card {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.card-content {\r\n  flex: 1;\r\n  text-align: center;\r\n}\r\n\r\n.card-image {\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  object-fit: contain;\r\n}\r\n\r\ncanvas {\r\n  border: 1px solid black;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}