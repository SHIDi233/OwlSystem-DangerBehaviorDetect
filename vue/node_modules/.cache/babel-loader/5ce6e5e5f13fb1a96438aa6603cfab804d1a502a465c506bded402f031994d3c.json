{"ast":null,"code":"var player = document.getElementById('video');\nif (flvjs.isSupported()) {\n  var flvPlayer = flvjs.createPlayer({\n    type: 'flv',\n    \"isLive\": true,\n    hasAudio: false,\n    enableWorker: true,\n    enableStashBuffer: false,\n    seekType: 'range',\n    stashInitialTime: 128,\n    url: `http://116.204.11.171:7001/${this.$route.params.cID}/test.flv` //拉流url\n  });\n\n  flvPlayer.attachMediaElement(video);\n  flvPlayer.load(); //加载\n  flv_start();\n}\nfunction flv_start() {\n  player.play();\n}\nfunction flv_pause() {\n  player.pause();\n}\nfunction flv_destroy() {\n  player.pause();\n  player.unload();\n  player.detachMediaElement();\n  player.destroy();\n  player = null;\n}\nplayer.addEventListener(\"progress\", () => {\n  let end = player.buffered.end(0); //获取当前buffered值(缓冲区末尾)\n  let delta = end - player.currentTime; //获取buffered与当前播放位置的差值\n\n  // 延迟过大，通过跳帧的方式更新视频\n  if (delta > 10 || delta < 0) {\n    this.player.currentTime = this.player.buffered.end(0) - 1;\n    return;\n  }\n\n  // 追帧\n  if (delta > 1) {\n    player.playbackRate = 1.1;\n  } else {\n    player.playbackRate = 1;\n  }\n});","map":{"version":3,"names":["player","document","getElementById","flvjs","isSupported","flvPlayer","createPlayer","type","hasAudio","enableWorker","enableStashBuffer","seekType","stashInitialTime","url","$route","params","cID","attachMediaElement","video","load","flv_start","play","flv_pause","pause","flv_destroy","unload","detachMediaElement","destroy","addEventListener","end","buffered","delta","currentTime","playbackRate"],"sources":["src/components/htmlFlv.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <header>\r\n        </header>\r\n        <div class=\"play-video wrapper clearfix\" style=\"width: 1215px;margin: 0 auto;\">\r\n            <div class=\"play-left\" style=\"float: left;width: 644px;\">\r\n                <div class=\"bigvideo\" style=\"position: relative;width: 1144px;box-shadow: 0 0 3px 3px #ccc;\">\r\n                    <video id=\"video\" controls autoplay width=\"1144\" height=\"644\"></video>\r\n                    <div class=\"info\">\r\n                        <p>直播测试</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script src=\"js/flv.min.js\"></script>\r\n<script>\r\n    var player = document.getElementById('video');\r\n    if (flvjs.isSupported()) {\r\n        var flvPlayer = flvjs.createPlayer({\r\n            type: 'flv',\r\n            \"isLive\": true,\r\n\t        hasAudio:false,\r\n\t        enableWorker:true,\r\n\t        enableStashBuffer:false,\r\n\t        seekType:'range',\r\n\t        stashInitialTime:128,\r\n            url: `http://116.204.11.171:7001/${this.$route.params.cID}/test.flv`,//拉流url\r\n        });\r\n        flvPlayer.attachMediaElement(video);\r\n        flvPlayer.load(); //加载\r\n        flv_start();\r\n    }\r\n    function flv_start() {\r\n            player.play();\r\n        }\r\n        function flv_pause() {\r\n            player.pause();\r\n        }\r\n        function flv_destroy() {\r\n            player.pause();\r\n            player.unload();\r\n            player.detachMediaElement();\r\n            player.destroy();\r\n            player = null;\r\n        }\r\n        player.addEventListener(\"progress\", () => {\r\n  \tlet end = player.buffered.end(0); //获取当前buffered值(缓冲区末尾)\r\n  \tlet delta = end - player.currentTime; //获取buffered与当前播放位置的差值\r\n\r\n \t // 延迟过大，通过跳帧的方式更新视频\r\n  \tif (delta > 10 || delta < 0) {\r\n    \t\tthis.player.currentTime = this.player.buffered.end(0) - 1;\r\n    \t\treturn;\r\n  \t}\r\n\r\n  \t// 追帧\r\n  \tif (delta > 1) {\r\n    \t\tplayer.playbackRate = 1.1;\r\n  \t} else {\r\n    \t\tplayer.playbackRate = 1;\r\n  \t}\r\n\t});\r\n</script>"],"mappings":"AAmBA,IAAAA,MAAA,GAAAC,QAAA,CAAAC,cAAA;AACA,IAAAC,KAAA,CAAAC,WAAA;EACA,IAAAC,SAAA,GAAAF,KAAA,CAAAG,YAAA;IACAC,IAAA;IACA;IACAC,QAAA;IACAC,YAAA;IACAC,iBAAA;IACAC,QAAA;IACAC,gBAAA;IACAC,GAAA,qCAAAC,MAAA,CAAAC,MAAA,CAAAC,GAAA;EACA;;EACAX,SAAA,CAAAY,kBAAA,CAAAC,KAAA;EACAb,SAAA,CAAAc,IAAA;EACAC,SAAA;AACA;AACA,SAAAA,UAAA;EACApB,MAAA,CAAAqB,IAAA;AACA;AACA,SAAAC,UAAA;EACAtB,MAAA,CAAAuB,KAAA;AACA;AACA,SAAAC,YAAA;EACAxB,MAAA,CAAAuB,KAAA;EACAvB,MAAA,CAAAyB,MAAA;EACAzB,MAAA,CAAA0B,kBAAA;EACA1B,MAAA,CAAA2B,OAAA;EACA3B,MAAA;AACA;AACAA,MAAA,CAAA4B,gBAAA;EACA,IAAAC,GAAA,GAAA7B,MAAA,CAAA8B,QAAA,CAAAD,GAAA;EACA,IAAAE,KAAA,GAAAF,GAAA,GAAA7B,MAAA,CAAAgC,WAAA;;EAEA;EACA,IAAAD,KAAA,SAAAA,KAAA;IACA,KAAA/B,MAAA,CAAAgC,WAAA,QAAAhC,MAAA,CAAA8B,QAAA,CAAAD,GAAA;IACA;EACA;;EAEA;EACA,IAAAE,KAAA;IACA/B,MAAA,CAAAiC,YAAA;EACA;IACAjC,MAAA,CAAAiC,YAAA;EACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}