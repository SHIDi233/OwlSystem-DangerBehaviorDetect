{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueRouter from 'vue-router';\nimport router from './router/index';\nimport axios from 'axios';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css'; //element-ui的css\nimport leMarkdownEditor from 'le-markdown-editor';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport * as echarts from 'echarts';\nVue.prototype.$echarts = echarts;\nVue.use(ElementUI);\nVue.use(VueRouter);\nVue.use(leMarkdownEditor);\n\n// axios.defaults.baseURL = 'E:\\\\ST\\\\html\\\\vue\\\\gitccn\\\\dist';\n// 添加请求拦截器\naxios.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  // 判断是否存在token,如果存在将每个页面header添加token\n  // config.headers['token']=\"eyJhbGciOiJIUzI1NiJ9.eyJtYWlsIjoiMjk4MjQzNzEzOUBxcS5jb20iLCJJRCI6MSwiZXhwIjoxNjg2NzYyMDYzfQ.RusKVZEKZEuMKVJPQc20iQZs-_3towb6UqdIa1g46do\";\n  if (sessionStorage.getItem(\"DBDtoken\")) {\n    config.headers['token'] = sessionStorage.getItem(\"DBDtoken\");\n  }\n  return config;\n}, function (error) {\n  router.push('/login');\n  return Promise.reject(error);\n});\nnew Vue({\n  render: h => h(App),\n  router,\n  axios\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","VueRouter","router","axios","ElementUI","leMarkdownEditor","echarts","prototype","$echarts","use","interceptors","request","config","sessionStorage","getItem","headers","error","push","Promise","reject","render","h","$mount"],"sources":["E:/ST/html/dbd/src/main.js"],"sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport VueRouter from 'vue-router';\r\nimport router from './router/index'\r\nimport axios from 'axios';\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'//element-ui的css\r\nimport leMarkdownEditor from 'le-markdown-editor'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\nimport * as echarts from 'echarts';\r\n\r\nVue.prototype.$echarts = echarts\r\n\r\nVue.use(ElementUI)\r\nVue.use(VueRouter);\r\nVue.use(leMarkdownEditor)\r\n\r\n\r\n// axios.defaults.baseURL = 'E:\\\\ST\\\\html\\\\vue\\\\gitccn\\\\dist';\r\n// 添加请求拦截器\r\naxios.interceptors.request.use(function (config) {\r\n  // 在发送请求之前做些什么\r\n  // 判断是否存在token,如果存在将每个页面header添加token\r\n  // config.headers['token']=\"eyJhbGciOiJIUzI1NiJ9.eyJtYWlsIjoiMjk4MjQzNzEzOUBxcS5jb20iLCJJRCI6MSwiZXhwIjoxNjg2NzYyMDYzfQ.RusKVZEKZEuMKVJPQc20iQZs-_3towb6UqdIa1g46do\";\r\n  if (sessionStorage.getItem(\"DBDtoken\")) {\r\n    config.headers['token']= sessionStorage.getItem(\"DBDtoken\");\r\n  }\r\n  return config\r\n}, function (error) {\r\n  router.push('/login')\r\n  return Promise.reject(error)\r\n});\r\n\r\nnew Vue({\r\n  \r\n  render: h => h(App),\r\n  router,\r\n  axios\r\n  \r\n}).$mount('#app')\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,sCAAsC;AAC7C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,sCAAsC;AAC7C,OAAO,KAAKC,OAAO,MAAM,SAAS;AAElCP,GAAG,CAACQ,SAAS,CAACC,QAAQ,GAAGF,OAAO;AAEhCP,GAAG,CAACU,GAAG,CAACL,SAAS,CAAC;AAClBL,GAAG,CAACU,GAAG,CAACR,SAAS,CAAC;AAClBF,GAAG,CAACU,GAAG,CAACJ,gBAAgB,CAAC;;AAGzB;AACA;AACAF,KAAK,CAACO,YAAY,CAACC,OAAO,CAACF,GAAG,CAAC,UAAUG,MAAM,EAAE;EAC/C;EACA;EACA;EACA,IAAIC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;IACtCF,MAAM,CAACG,OAAO,CAAC,OAAO,CAAC,GAAEF,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;EAC7D;EACA,OAAOF,MAAM;AACf,CAAC,EAAE,UAAUI,KAAK,EAAE;EAClBd,MAAM,CAACe,IAAI,CAAC,QAAQ,CAAC;EACrB,OAAOC,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,IAAIjB,GAAG,CAAC;EAENqB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACrB,GAAG,CAAC;EACnBE,MAAM;EACNC;AAEF,CAAC,CAAC,CAACmB,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}