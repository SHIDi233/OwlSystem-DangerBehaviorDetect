{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport dayjs from 'dayjs';\nimport axios from \"axios\";\nimport global from './GlobalPage.vue';\nconst restweburl = global.ip;\nexport default {\n  name: \"dataAnalyse\",\n  data() {\n    return {\n      options: [],\n      typeOptions: [{\n        value: 'bar'\n      }, {\n        value: 'line'\n      }, {\n        value: 'pine'\n      }],\n      value: '',\n      xValue: [\"抽烟\", \"玩手机\", \"明火\"],\n      yValue: [5, 20, 36],\n      dialogTableVisible: false,\n      dialogFormVisible: false,\n      form: {\n        name: '',\n        region: '',\n        date1: '',\n        date2: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      formLabelWidth: '120px',\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      value1: [],\n      value2: '',\n      pictureType: 'bar'\n    };\n  },\n  mounted() {\n    //this.drawLine(\"myChart\");\n    // this.drawLine(\"myChart2\");\n    // this.drawLine(\"myChart3\");\n    // this.drawLine(\"myChart4\");\n  },\n  created() {\n    //   var params = new URLSearchParams();\n    //   params.append('wName',this.$parent.$route.params.id);\n    //   params.append('grant','-1');\n    //   var c =this.$parent.$route.params.id;\n    axios.get(restweburl + \"cameras\").then(res => {\n      this.options = res.data.data;\n      this.loading = false;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  methods: {\n    getData() {\n      const startDate = dayjs(this.value1[0]).format('YYYY-MM-DDTHH:mm:ss');\n      const endDate = dayjs(this.value1[1]).format('YYYY-MM-DDTHH:mm:ss');\n      console.log(startDate); // 开始日期，格式为 \"2023-07-13T21:44:12\"\n      console.log(endDate); // 结束日期，格式为 \"2023-07-13T21:44:12\"\n\n      var params = new URLSearchParams();\n      params.append('cID', this.value);\n      params.append('sTime', startDate);\n      params.append('eTime', endDate);\n      console.log(\"111\");\n      console.log(params.toString());\n      console.log(params);\n      // params.append('month',this.month);\n      // params.append('day',this.day);\n      //\n      axios.get(restweburl + \"count\", {\n        params: {\n          cID: this.value,\n          sTime: startDate,\n          eTime: endDate\n        }\n      }).then(res => {\n        this.xValue = res.data.data.type;\n        this.yValue = res.data.data.cnt;\n        console.log(res.data.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    drawLine(chartID) {\n      // 基于准备好的dom，初始化echarts实例\n      //console.log(this.value1.);\n\n      // 获取选择的日期\n\n      console.log(this.xValue);\n      console.log(this.yValue);\n      let myChart = this.$echarts.init(document.getElementById(chartID));\n      myChart.setOption({\n        title: {\n          text: '危险行为数量统计图'\n        },\n        tooltip: {},\n        xAxis: {\n          data: this.xValue,\n          axisLabel: {\n            interval: 0 // 设置横坐标显示的间隔，这里设置为2表示每隔两个数据显示一个\n          }\n        },\n\n        yAxis: {},\n        series: [{\n          name: '数量',\n          type: this.pictureType,\n          data: this.yValue,\n          itemStyle: {\n            color: '#81bcd9' // 每个柱子的颜色分别为红、绿、蓝、黄、紫\n          },\n\n          label: {\n            show: true,\n            position: 'top',\n            formatter: '{c}' // 显示具体的数值\n          }\n        }]\n      });\n    }\n  }\n};","map":{"version":3,"names":["dayjs","axios","global","restweburl","ip","name","data","options","typeOptions","value","xValue","yValue","dialogTableVisible","dialogFormVisible","form","region","date1","date2","delivery","type","resource","desc","formLabelWidth","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","value1","value2","pictureType","mounted","created","get","then","res","loading","catch","error","console","log","methods","getData","startDate","format","endDate","params","URLSearchParams","append","toString","cID","sTime","eTime","cnt","drawLine","chartID","myChart","$echarts","init","document","getElementById","setOption","title","tooltip","xAxis","axisLabel","interval","yAxis","series","itemStyle","color","label","show","position","formatter"],"sources":["src/components/dataAnalyse.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card>\r\n      <div class=\"block\">\r\n        <span class=\"demonstration\" :style=\"{ marginRight: '10px' }\">时间段：</span>\r\n        <el-date-picker\r\n            v-model=\"value1\"\r\n            type=\"datetimerange\"\r\n            :picker-options=\"pickerOptions\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            align=\"right\"\r\n            :style=\"{ marginRight: '20px' }\">\r\n        </el-date-picker>\r\n\r\n\r\n\r\n        <span :style=\"{ marginRight: '10px' }\">摄像头：</span>\r\n        <el-select v-model=\"value\" filterable placeholder=\"请选择摄像头\" :style=\"{ marginRight: '20px' }\">\r\n          <el-option\r\n              v-for=\"item in options\"\r\n              :key=\"item.cid\"\r\n              :label=\"item.cid\"\r\n              :value=\"item.cid\">\r\n          </el-option>\r\n        </el-select>\r\n\r\n\r\n        <span :style=\"{ marginRight: '10px' }\">图表类型：</span>\r\n        <el-select v-model=\"pictureType\" filterable placeholder=\"图表类型\" :style=\"{ marginRight: '20px' }\">\r\n          <el-option\r\n              v-for=\"item in typeOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.value\"\r\n              :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" circle @click=\"getData\">确定范围</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" circle @click=\"() => drawLine('myChart')\">绘制图形</el-button>\r\n\r\n      </div>\r\n    </el-card>\r\n    <el-card>\r\n      <div class=\"grid-content bg-purple\"><div id=\"myChart\" :style=\"{width: '1000px', height: '600px'}\"></div></div>\r\n<!--      <el-row>-->\r\n\r\n<!--        <el-col :span=\"12\">-->\r\n<!--          <div class=\"grid-content bg-purple\"><div id=\"myChart\" :style=\"{width: '600px', height: '500px'}\"></div></div></el-col>-->\r\n\r\n\r\n<!--        <el-col :span=\"12\"><div class=\"grid-content bg-purple-light\"> <div id=\"myChart2\" :style=\"{width: '600px', height: '500px'}\"></div></div></el-col>-->\r\n\r\n<!--      </el-row>-->\r\n\r\n<!--      <el-row>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div class=\"grid-content bg-purple\"><div id=\"myChart3\" :style=\"{width: '600px', height: '500px'}\"></div></div></el-col>-->\r\n\r\n\r\n<!--      <el-col :span=\"12\"><div class=\"grid-content bg-purple-light\"> <div id=\"myChart4\" :style=\"{width: '600px', height: '500px'}\"></div></div></el-col>-->\r\n\r\n<!--      </el-row>-->\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dayjs from 'dayjs';\r\nimport axios from \"axios\";\r\nimport global from './GlobalPage.vue'\r\nconst restweburl = global.ip;\r\n\r\nexport default {\r\n  name: \"dataAnalyse\",\r\n  data() {\r\n    return {\r\n      options: [],\r\n      typeOptions: [{\r\n        value: 'bar',\r\n      }, {\r\n        value: 'line',\r\n      }, {\r\n        value: 'pine',\r\n      }],\r\n      value: '',\r\n      xValue:[\"抽烟\",\"玩手机\",\"明火\"],\r\n      yValue:[5, 20, 36],\r\n\r\n      dialogTableVisible: false,\r\n      dialogFormVisible: false,\r\n      form: {\r\n        name: '',\r\n        region: '',\r\n        date1: '',\r\n        date2: '',\r\n        delivery: false,\r\n        type: [],\r\n        resource: '',\r\n        desc: ''\r\n      },\r\n      formLabelWidth: '120px',\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }, {\r\n          text: '最近三个月',\r\n          onClick(picker) {\r\n            const end = new Date();\r\n            const start = new Date();\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n            picker.$emit('pick', [start, end]);\r\n          }\r\n        }]\r\n      },\r\n      value1: [],\r\n      value2: '',\r\n      pictureType:'bar',\r\n    };\r\n  },\r\n  mounted(){\r\n    //this.drawLine(\"myChart\");\r\n    // this.drawLine(\"myChart2\");\r\n    // this.drawLine(\"myChart3\");\r\n    // this.drawLine(\"myChart4\");\r\n  },\r\n  created() {\r\n    //   var params = new URLSearchParams();\r\n    //   params.append('wName',this.$parent.$route.params.id);\r\n    //   params.append('grant','-1');\r\n    //   var c =this.$parent.$route.params.id;\r\n    axios.get(restweburl + \"cameras\",)\r\n        .then((res) => {\r\n          this.options = res.data.data;\r\n          this.loading=false;\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n  },\r\n  methods:{\r\n\r\n    getData(){\r\n      const startDate = dayjs(this.value1[0]).format('YYYY-MM-DDTHH:mm:ss');\r\n      const endDate = dayjs(this.value1[1]).format('YYYY-MM-DDTHH:mm:ss');\r\n\r\n      console.log(startDate); // 开始日期，格式为 \"2023-07-13T21:44:12\"\r\n      console.log(endDate); // 结束日期，格式为 \"2023-07-13T21:44:12\"\r\n\r\n      var params = new URLSearchParams();\r\n      params.append('cID',this.value);\r\n      params.append('sTime',startDate);\r\n      params.append('eTime',endDate);\r\n      console.log(\"111\");\r\n      console.log(params.toString());\r\n      console.log(params);\r\n      // params.append('month',this.month);\r\n      // params.append('day',this.day);\r\n      //\r\n      axios.get(restweburl + \"count\", {\r\n        params: {\r\n          cID: this.value,\r\n          sTime:startDate,\r\n          eTime:endDate\r\n        }\r\n      })\r\n          .then((res) => {\r\n            this.xValue = res.data.data.type;\r\n            this.yValue=res.data.data.cnt;\r\n\r\n            console.log(res.data.data);\r\n\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n\r\n    },\r\n    drawLine(chartID){\r\n\r\n      // 基于准备好的dom，初始化echarts实例\r\n//console.log(this.value1.);\r\n\r\n      // 获取选择的日期\r\n\r\n      console.log(this.xValue);\r\n      console.log(this.yValue);\r\n      let myChart = this.$echarts.init(document.getElementById(chartID));\r\n\r\n\r\n      myChart.setOption({\r\n        title: { text: '危险行为数量统计图' },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.xValue,\r\n          axisLabel: {\r\n            interval: 0 // 设置横坐标显示的间隔，这里设置为2表示每隔两个数据显示一个\r\n          }\r\n        },\r\n        yAxis: {},\r\n        series: [{\r\n          name: '数量',\r\n          type: this.pictureType,\r\n          data: this.yValue,\r\n          itemStyle: {\r\n            color: '#81bcd9'// 每个柱子的颜色分别为红、绿、蓝、黄、紫\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'top',\r\n            formatter: '{c}' // 显示具体的数值\r\n          }\r\n        }]\r\n      });\r\n\r\n\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}