{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport global from './GlobalPage.vue';\nconst restweburl = global.ip;\nexport default {\n  data() {\n    //message: 'Hello Vue.js!'\n    return {\n      loginForm: {\n        mail: '1985136419@qq.com',\n        password: '123456'\n      },\n      ac: \"\",\n      pw: \"\",\n      loading: false\n      //     loginRules: {\n      //         username: [{ required: true, trigger: 'blur', validator: validateUsername }],\n      //         password: [{ required: true, trigger: 'blur', validator: validatePassword }]\n      //     },\n      // loading: false,\n      // passwordType: 'password',\n      // redirect: undefined\n    };\n  },\n\n  methods: {\n    handleLogin: function () {\n      // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\n      // alert(\"登录\");\n      // var a = this.ac;\n      // var p = this.pw;\n      // alert(a);\n      // alert(p);\n      loading = true;\n      var params = new URLSearchParams();\n      params.append('mail', this.loginForm.mail);\n      params.append('password', this.loginForm.password);\n      axios.post(restweburl + 'login', params).then(response => {\n        console.log(response.data);\n        // var obj = JSON.parse(response.data);\n        // console.log(obj)\n        if (response.data.code == 1) {\n          window.sessionStorage.setItem(\"DBDtoken\", response.data.data);\n          this.$router.push('/home');\n        } else {\n          alert(\"密码错误\");\n        }\n      }).catch(error => {\n        alert(error);\n        alert(\"请求失败\");\n      });\n    },\n    register: function () {\n      // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\n      // alert(\"注册\");\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["axios","global","restweburl","ip","data","loginForm","mail","password","ac","pw","loading","methods","handleLogin","params","URLSearchParams","append","post","then","response","console","log","code","window","sessionStorage","setItem","$router","push","alert","catch","error","register"],"sources":["src/components/LoginPage.vue"],"sourcesContent":["<style src=\"./css/login.css\" scoped></style>\r\n<template>\r\n    <body>\r\n        <div class=\"login-container\">\r\n            <el-form ref=\"form\" :model=\"loginForm\" label-width=\"80px\">\r\n                <div class=\"title-container\">\r\n                    <h3 class=\"title\">WELCOME TO OWL SYSTEM</h3>\r\n                </div>\r\n                <el-form-item prop=\"username\">\r\n                    <!-- <span class=\"svg-container\">\r\n                        <svg-icon icon-class=\"user\" />\r\n                    </span> -->\r\n                    \r\n                    <el-input\r\n                        ref=\"username\"\r\n                        v-model=\"loginForm.mail\"\r\n                        placeholder=\"用户名\"\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        tabindex=\"1\"\r\n                        auto-complete=\"on\"\r\n                    />\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <!-- <span class=\"svg-container\">\r\n                        <svg-icon icon-class=\"password\" />\r\n                    </span> -->\r\n                    <el-input\r\n                        :key=\"passwordType\"\r\n                        ref=\"password\"\r\n                        v-model=\"loginForm.password\"\r\n                        :type=\"passwordType\"\r\n                        placeholder=\"密码\"\r\n                        name=\"password\"\r\n                        tabindex=\"2\"\r\n                        auto-complete=\"on\"\r\n                        @keyup.enter.native=\"handleLogin\"\r\n                    />\r\n                </el-form-item>\r\n                <el-button :loading=\"loading\" type=\"primary\" style=\"width:100%;margin-bottom:30px;\" @click.native.prevent=\"handleLogin\">登录</el-button>\r\n            </el-form>\r\n        </div>\r\n    </body>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n    import global from './GlobalPage.vue'\r\n    const restweburl = global.ip;\r\n    export default {\r\n        data() {\r\n            \r\n            //message: 'Hello Vue.js!'\r\n            return{\r\n                loginForm: {\r\n                    mail: '1985136419@qq.com',\r\n                    password: '123456'\r\n                },\r\n                ac:\"\",\r\n                pw:\"\",\r\n                loading:false\r\n            //     loginRules: {\r\n            //         username: [{ required: true, trigger: 'blur', validator: validateUsername }],\r\n            //         password: [{ required: true, trigger: 'blur', validator: validatePassword }]\r\n            //     },\r\n            // loading: false,\r\n            // passwordType: 'password',\r\n            // redirect: undefined\r\n            }\r\n        },\r\n        methods: {\r\n            handleLogin: function () {\r\n                // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\r\n                // alert(\"登录\");\r\n                // var a = this.ac;\r\n                // var p = this.pw;\r\n                // alert(a);\r\n                // alert(p);\r\n                loading=true;\r\n                var params = new URLSearchParams();\r\n                params.append('mail',this.loginForm.mail);\r\n                params.append('password',this.loginForm.password);\r\n\r\n                axios.post(restweburl+'login', params).then(response => {\r\n                    console.log(response.data)\r\n                    // var obj = JSON.parse(response.data);\r\n                    // console.log(obj)\r\n                    if(response.data.code==1){\r\n                        window.sessionStorage.setItem(\"DBDtoken\",response.data.data);\r\n                        this.$router.push('/home');\r\n                    }\r\n                    else{\r\n                        alert(\"密码错误\")\r\n                    }\r\n                }).catch(error => {\r\n                    alert(error)\r\n                    alert(\"请求失败\")\r\n                })\r\n            },\r\n            register: function () {\r\n                // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\r\n                // alert(\"注册\");\r\n                this.$router.push('/register')\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style lang=\"scss\">\r\n/* 修复input 背景不协调 和光标变色 */\r\n/* Detail see https://github.com/PanJiaChen/vue-element-admin/pull/927 */\r\n\r\n$bg:#283443;\r\n$light_gray:#fff;\r\n$cursor: #fff;\r\n\r\n@supports (-webkit-mask: none) and (not (cater-color: $cursor)) {\r\n  .login-container .el-input input {\r\n    color: $cursor;\r\n  }\r\n}\r\n\r\n/* reset element-ui css */\r\n.login-container {\r\n  .el-input {\r\n    display: inline-block;\r\n    height: 47px;\r\n    width: 85%;\r\n\r\n    input {\r\n      background: transparent;\r\n      border: 0px;\r\n    //   -webkit-appearance: none;\r\n      border-radius: 0px;\r\n      padding: 12px 5px 12px 15px;\r\n      color: $light_gray;\r\n      height: 47px;\r\n      caret-color: $cursor;\r\n\r\n      &:-webkit-autofill {\r\n        box-shadow: 0 0 0px 1000px $bg inset !important;\r\n        -webkit-text-fill-color: $cursor !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .el-form-item {\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-radius: 5px;\r\n    color: #454545;\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\" scoped>\r\n$bg:#2d3a4b;\r\n$dark_gray:#889aa4;\r\n$light_gray:#eee;\r\n\r\n.login-container {\r\n  min-height: 100%;\r\n  width: 100%;\r\n  background-color: $bg;\r\n  overflow: hidden;\r\n\r\n  background-image: url(\"../img/back.jpg\") ;\r\n  background-size: 100%;\r\n  background-repeat: no-repeat;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .login-form {\r\n    position: relative;\r\n    width: 520px;\r\n    max-width: 100%;\r\n    padding: 35px 35px 10px;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .tips {\r\n    font-size: 14px;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n\r\n    span {\r\n      &:first-of-type {\r\n        margin-right: 16px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .svg-container {\r\n    padding: 6px 5px 6px 15px;\r\n    color: $dark_gray;\r\n    vertical-align: middle;\r\n    width: 30px;\r\n    display: inline-block;\r\n  }\r\n\r\n  .title-container {\r\n    position: relative;\r\n\r\n    .title {\r\n      font-size: 26px;\r\n      color: $light_gray;\r\n      margin: 0px auto 40px auto;\r\n      text-align: center;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  .show-pwd {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 7px;\r\n    font-size: 16px;\r\n    color: $dark_gray;\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n}\r\n</style>"],"mappings":";;AA8CA,OAAAA,KAAA;AACA,OAAAC,MAAA;AACA,MAAAC,UAAA,GAAAD,MAAA,CAAAE,EAAA;AACA;EACAC,KAAA;IAEA;IACA;MACAC,SAAA;QACAC,IAAA;QACAC,QAAA;MACA;MACAC,EAAA;MACAC,EAAA;MACAC,OAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;;EACAC,OAAA;IACAC,WAAA,WAAAA,CAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACAF,OAAA;MACA,IAAAG,MAAA,OAAAC,eAAA;MACAD,MAAA,CAAAE,MAAA,cAAAV,SAAA,CAAAC,IAAA;MACAO,MAAA,CAAAE,MAAA,kBAAAV,SAAA,CAAAE,QAAA;MAEAP,KAAA,CAAAgB,IAAA,CAAAd,UAAA,YAAAW,MAAA,EAAAI,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAd,IAAA;QACA;QACA;QACA,IAAAc,QAAA,CAAAd,IAAA,CAAAiB,IAAA;UACAC,MAAA,CAAAC,cAAA,CAAAC,OAAA,aAAAN,QAAA,CAAAd,IAAA,CAAAA,IAAA;UACA,KAAAqB,OAAA,CAAAC,IAAA;QACA,OACA;UACAC,KAAA;QACA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACAF,KAAA,CAAAE,KAAA;QACAF,KAAA;MACA;IACA;IACAG,QAAA,WAAAA,CAAA;MACA;MACA;MACA,KAAAL,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}